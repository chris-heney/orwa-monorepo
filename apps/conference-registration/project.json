{
  "name": "conference-registration",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/conference-registration/src",
  "projectType": "application",
  "tags": [],
  "// targets": "to see all targets run: nx show project conference-registration --web",
  "targets": {
    "build": {
      "executor": "@nx/vite:build",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "outputPath": "dist/apps/conference-registration"
      },
      "configurations": {
        "development": {
          "mode": "development"
        },
        "production": {
          "mode": "production"
        }
      }
    },
    "serve": {
      "executor": "@nx/vite:dev-server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "conference-registration:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "conference-registration:build:development",
          "hmr": true
        },
        "production": {
          "buildTarget": "conference-registration:build:production",
          "hmr": false
        }
      },
      "dependsOn": [{"projects": ["mm-strapi"], "target": "serve"}]
    },
    "test": {
      "executor": "@nx/vite:test",
      "outputs": ["{options.reportsDirectory}"],
      "options": {
        "reportsDirectory": "../../coverage/apps/conference-registration"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"]
    },
    "docker:build": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker buildx build --platform linux/amd64 --no-cache --target production -t orwa/conference-registration:latest -f Dockerfile.conference-registration .",
        "cwd": "{workspaceRoot}"
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "dependsOn": ["docker:build"],
      "options": {
        "command": "docker push orwa/conference-registration:latest"
      }
    }
  }
}