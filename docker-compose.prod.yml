version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:lts
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - orwa_network
    labels:
      - "traefik.enable=false"

  # Strapi Backend
  mm-strapi:
    build:
      context: .
      dockerfile: Dockerfile.mm-strapi
    restart: unless-stopped
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_NAME: ${MYSQL_DATABASE}
      DATABASE_USERNAME: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
      DATABASE_SSL: false
      HOST: 0.0.0.0
      PORT: 1337
      APP_KEYS: ${APP_KEYS}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - mysql
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mm-strapi.rule=Host(`api.${DOMAIN}`)"
      - "traefik.http.routers.mm-strapi.tls=true"
      - "traefik.http.routers.mm-strapi.tls.certresolver=letsencrypt"
      - "traefik.http.services.mm-strapi.loadbalancer.server.port=1337"

  # Frontend Applications
  grant-application:
    build:
      context: ./apps/grant-application
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grant-application.rule=Host(`grants.${DOMAIN}`)"
      - "traefik.http.routers.grant-application.tls=true"
      - "traefik.http.routers.grant-application.tls.certresolver=letsencrypt"
      - "traefik.http.services.grant-application.loadbalancer.server.port=80"

  membership-application:
    build:
      context: ./apps/membership-application
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.membership-application.rule=Host(`membership.${DOMAIN}`)"
      - "traefik.http.routers.membership-application.tls=true"
      - "traefik.http.routers.membership-application.tls.certresolver=letsencrypt"
      - "traefik.http.services.membership-application.loadbalancer.server.port=80"

  conference-registration:
    build:
      context: ./apps/conference-registration
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.conference-registration.rule=Host(`conference.${DOMAIN}`)"
      - "traefik.http.routers.conference-registration.tls=true"
      - "traefik.http.routers.conference-registration.tls.certresolver=letsencrypt"
      - "traefik.http.services.conference-registration.loadbalancer.server.port=80"

  grant-map:
    build:
      context: ./apps/grant-map
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grant-map.rule=Host(`map.${DOMAIN}`)"
      - "traefik.http.routers.grant-map.tls=true"
      - "traefik.http.routers.grant-map.tls.certresolver=letsencrypt"
      - "traefik.http.services.grant-map.loadbalancer.server.port=80"

  grant-scoring:
    build:
      context: ./apps/grant-scoring
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grant-scoring.rule=Host(`scoring.${DOMAIN}`)"
      - "traefik.http.routers.grant-scoring.tls=true"
      - "traefik.http.routers.grant-scoring.tls.certresolver=letsencrypt"
      - "traefik.http.services.grant-scoring.loadbalancer.server.port=80"

  associate-directory:
    build:
      context: ./apps/associate-directory
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - mm-strapi
    networks:
      - orwa_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.associate-directory.rule=Host(`directory.${DOMAIN}`)"
      - "traefik.http.routers.associate-directory.tls=true"
      - "traefik.http.routers.associate-directory.tls.certresolver=letsencrypt"
      - "traefik.http.services.associate-directory.loadbalancer.server.port=80"

volumes:
  mysql_data:

networks:
  orwa_network:
    external: true